// custom-date-pipe
import { Pipe, PipeTransform } from '@angular/core';
import { DatePipe } from '@angular/common';

@Pipe({
  name: 'customDate'
})
export class CustomDatePipe implements PipeTransform {

  transform(value: any, format: string = 'MM/dd/yyyy'): any {
    if (!value) return value;
    let datePipe = new DatePipe('en-US');
    value = datePipe.transform(value, format);
    return value;
  }

}


// debouncing
import { debounceTime } from 'rxjs/operators';
private inputSubject = new Subject<string>();

ngOnInit() {
    this.inputSubject.pipe(debounceTime(1000)).subscribe(() => {
        this.getreturned();
      });
}


//export
import { saveAs } from 'file-saver';

  exportToCsv(filename: string, rows: any[]) {
    if (!rows || !rows.length) {
      return;
    }
    const separator = ',';
    const keys = Object.keys(rows[0]);
    const csvContent =
      keys.join(separator) +
      '\n' +
      rows.map(row => {
        return keys.map(k => {
          let cell = row[k] === null || row[k] === undefined ? '' : row[k];
          cell = cell instanceof Date
            ? cell.toLocaleString()
            : cell.toString().replace(/"/g, '""');
          if (cell.search(/("|,|\n)/g) >= 0) {
            cell = `"${cell}"`;
          }
          return cell;
        }).join(separator);
      }).join('\n');

    const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });
    saveAs(blob, filename);
  }

